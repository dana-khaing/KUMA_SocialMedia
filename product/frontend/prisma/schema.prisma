generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id
  username String @unique
  avatar String?
  cover String?
  name String?
  surname String?
  description String?
  city String?
  bio String?
  school String?
  work String?
  website String?
  createdAt DateTime @default (now())
  posts Post[]
  likes Like[]
  comments Comment[]
}

model Post {
  id Int @id @default(autoincrement())
  desc String
  image String?
  createdAt DateTime @default (now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
  userId String
  likes Like[]
  comments Comment[]
}

model Like {
  id Int @id @default(autoincrement())
  createdAt DateTime @default (now())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int
  Comment Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)
  commentId Int

}

model Comment {
  id Int @id @default(autoincrement())
  desc String
  createdAt DateTime @default (now())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int
  likes Like[]
}